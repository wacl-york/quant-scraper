name: "Deploy new release"
on: 
 push:
   # fixme remove test branch
    branches: [ master, feature/aws-deploy ]
 pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Deploy CloudFormation Stack
      uses: university-of-york/aws-cfn-deploy-action@v1.0
      env:
        TEMPLATE: cloudformation/main.yaml
        # fixme Revert to QUANTScrapingStack and production
        PARAMETER_FILE: cloudformation/configs/dev.json
        AWS_STACK_NAME: QUANTScrapingStackDev
        AWS_REGION: eu-west-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        CAPABILITIES: CAPABILITY_IAM CAPABILITY_NAMED_IAM
        ROLE_ARN: arn:aws:iam::020755766155:role/GithubActionsDeploymentRole
        # fixme revert dev to prod
        TAGS: group=RESEARCH project=quant status=prod pushed_by=githubaction defined_in=cloudformation repo_name=wacl-york/quantscraper user=sl561 team=rhpc
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
    - name: Login to Amazon ECR
      id: loginecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.loginecr.outputs.registry }}
        ECR_REPOSITORY: wacl/quantscraper
      run: |
        VERSION=$(sh ./version.sh)
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
